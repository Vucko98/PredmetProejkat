{"version":3,"file":"SparqlXmlBindingsTransformer.js","sourceRoot":"","sources":["SparqlXmlBindingsTransformer.ts"],"names":[],"mappings":";;;AAAA,mCAAoD;AAGpD;;GAEG;AACH,MAAa,4BAA6B,SAAQ,kBAAS;IAIzD,YAAY,MAAuB;QACjC,KAAK,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAEM,UAAU,CAAC,KAAU,EAAE,QAAgB,EAAE,QAA2B;QACzE,IAAI,QAAQ,CAAC;QACb,IAAI;YACF,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;SAChD;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC;SACpB;QACD,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAC3B,CAAC;CAEF;AAnBD,oEAmBC","sourcesContent":["import {Transform, TransformCallback} from \"stream\";\nimport {SparqlXmlParser} from \"./SparqlXmlParser\";\n\n/**\n * Transforms a stream of SPARQL JSON bindings object to parsed bindings.\n */\nexport class SparqlXmlBindingsTransformer extends Transform {\n\n  private readonly parser: SparqlXmlParser;\n\n  constructor(parser: SparqlXmlParser) {\n    super({ objectMode: true });\n    this.parser = parser;\n  }\n\n  public _transform(chunk: any, encoding: string, callback: TransformCallback): void {\n    let bindings;\n    try {\n      bindings = this.parser.parseXmlBindings(chunk);\n    } catch (e) {\n      return callback(e);\n    }\n    callback(null, bindings);\n  }\n\n}\n"]}